type Member {
  id: ID!
  auth_id: String
  firstName: String
  middleName: String
  lastName: String
  fullName: String @customResolver
  email: String
  phoneNumber: String
  whatsappNumber: String
  pictureUrl: String
  fellowship: Fellowship! @relationship(type: "BELONGS_TO", direction: OUT)
  offerings: [Offering!]! @relationship(type: "MADE", direction: OUT)
  transactions: [Transaction!]! @customResolver
}

type Fellowship {
  id: ID!
  bankingCode: Int!
  name: String!
}

interface Transaction {
  id: ID!
  amount: Int!
  method: String!
  member: Member! @relationship(type: "MADE", direction: IN)
  createdAt: DateTime!
  createdBy: String!
  transactionReference: String!
  transactionStatus: String!
  updatedAt: DateTime!
}

type Offering implements Transaction {
  id: ID!
  amount: Int!
  method: String!
  member: Member!
  createdAt: DateTime!
  createdBy: String!
  transactionReference: String!
  transactionStatus: String!
  updatedAt: DateTime!
}

type Mutation {
  giveFellowshipOfferingMomo(
    amount: Float!
    bankingCode: Int!
    mobileNetwork: String!
    mobileNumber: String!
  ): Offering!
  SendPaymentOTP(otp: String!, reference: String!): Boolean!
  ConfirmTransaction(reference: String!): Offering!
}
